.about-page {
  .heading {
    align-items: center;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    .cube-container {
      align-items: center;
      animation-duration: 13s;
      animation-fill-mode: forwards;
      animation-name: fadeIn;
      animation-timing-function: ease-in;
      display: flex;
      height: calc(var(--cube-size) * 1.3);
      justify-content: center;
      margin: calc(var(--cube-size) / 5);
      opacity: 0;
      perspective: calc(var(--cube-size) * 2);
      position: relative;
      width: calc(var(--cube-size) * 1.3);
      .cube {
        animation-duration: 13s;
        animation-iteration-count: infinite;
        animation-name: spincube;
        animation-timing-function: ease-in-out;
        height: var(--cube-size);
        transform-style: preserve-3d;
        width: var(--cube-size);
        div {
          align-items: center;
          background-color: rgba(255, 0, 0, 0.13);
          border-color: var(--primary-color);
          border-style: solid;
          border-width: 1px;
          box-shadow: 0 0 13px 0px var(--primary-color);
          color: var(--primary-color);
          display: flex;
          font-size: calc(var(--cube-size) / 2);
          height: 100%;
          justify-content: center;
          position: absolute;
          text-align: center;
          width: 100%;
          &:hover {
            border-color: var(--accent-color);
            box-shadow: 0 0 20px 0px var(--accent-color);
            color: var(--accent-color);
          }
          &.front-face {
            transform: translateZ(calc(var(--cube-size) / 2));
          }
          &.back-face {
            transform: rotate3d(0, 1, 0, 180deg) translateZ(calc(var(--cube-size) / 2));
          }
          &.left-face {
            transform: rotate3d(0, 1, 0, -90deg) translateZ(calc(var(--cube-size) / 2));
          }
          &.right-face {
            transform: rotate3d(0, 1, 0, 90deg) translateZ(calc(var(--cube-size) / 2));
          }
          &.top-face {
            transform: rotate3d(1, 0, 0, 90deg) translateZ(calc(var(--cube-size) / 2));
          }
          &.bottom-face {
            transform: rotate3d(1, 0, 0, -90deg) translateZ(calc(var(--cube-size) / 2));
          }
        }
      }
    }
  }
  p {
    animation-duration: 1s, 1s;
    animation-fill-mode: forwards, forwards;
    animation-name: fadeIn, pulse;
    opacity: 0;
    &:nth-of-type(1) {
      animation-delay: 1.5s, 1.5s;
    }
    &:nth-of-type(2) {
      animation-delay: 2s, 2s;
    }
    &:nth-of-type(3) {
      animation-delay: 2.5s, 2.5s;
    }
  }
}
@keyframes spincube {
  /* TODO: figure out why deg is negative of original transformations
  https://stackoverflow.com/questions/75815966/css-rotate3d-doesnt-seem-to-follow-a-consistent-rule */
  0%,
  100% {
    transform: rotate3d(1, 1, 1, 0deg); /* front */
  }
  16.66% {
    transform: rotate3d(0, 1, 0, 90deg); /* left */
  }
  33.33% {
    transform: rotate3d(1, 0, 0, -90deg); /* top */
  }
  50% {
    transform: rotate3d(0, 1, 0, -180deg); /* back */
  }
  66.66% {
    transform: rotate3d(0, 1, 0, -90deg); /* right */
  }
  83.33% {
    transform: rotate3d(1, 0, 0, 90deg); /* bottom */
  }
}
